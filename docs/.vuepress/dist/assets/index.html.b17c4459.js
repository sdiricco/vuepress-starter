import{_ as a,o as r,c as o,b as t,d as i,e,a as c,r as n}from"./app.30ed76b5.js";var l="/assets/RegExpr.fc77102f.png";const s={},h=t("h1",{id:"regular-expression",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#regular-expression","aria-hidden":"true"},"#"),e(" Regular Expression")],-1),p=t("p",null,"Un' espressione regolare \xE8 una stringa di caratteri opportunamente codificata che filtra un'insieme di stringhe. E' possibile, con un'espressione regolare creare dei filtri per le ricerche di testo all'interno di un file o un determinato modello.",-1),u=t("h2",{id:"strumenti-necessari",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#strumenti-necessari","aria-hidden":"true"},"#"),e(" Strumenti necessari")],-1),m=e("Puoi imparare la sintassi delle espressioni regolari su un motore online come "),g={href:"https://regexr.com/",target:"_blank",rel:"noopener noreferrer"},b=e("RegExpr"),z=e("."),x=c('<p><img src="'+l+'" alt="RegExpr"></p><p>E&#39; un ottimo strumento poich\xE8 oltre ad evidenziare nel testo l&#39;insieme di caratteri filtrati dall&#39;espressione regolare fornisce anche una spiegazione per ogni costrutto utilizzato nell&#39;espressione regolare.</p><h2 id="qualche-esempio" tabindex="-1"><a class="header-anchor" href="#qualche-esempio" aria-hidden="true">#</a> Qualche esempio</h2><h3 id="selezione-1" tabindex="-1"><a class="header-anchor" href="#selezione-1" aria-hidden="true">#</a> Selezione 1</h3><p>Vediamo subito un esempio. La seguente \xE8 un&#39;espressione regolare che seleziona tutte le lettere maiuscole e minuscole</p><table><thead><tr><th>RegExpr</th><th><code>/[a-zA-Z]/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>C,i,a,o,a,t,u,t,t,i,v,o,l,t,e,g,r,a,z,i,e</td></tr></tbody></table><p><strong>Nota:</strong> Ho utato la <code>,</code> per separare la selezione. Con questo si vuol evidenziare che gli spazi vengono ignorati</p><h3 id="selezione-2" tabindex="-1"><a class="header-anchor" href="#selezione-2" aria-hidden="true">#</a> Selezione 2</h3><p>La seguente espressione regolare invece selezioner\xE0 soltanto i caratteri numerici</p><table><thead><tr><th>RegExpr</th><th><code>/[0-9]/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>1,2</td></tr></tbody></table><h2 id="partiamo-dall-inizio" tabindex="-1"><a class="header-anchor" href="#partiamo-dall-inizio" aria-hidden="true">#</a> Partiamo dall&#39;inizio</h2><h2 id="i-metacaratteri" tabindex="-1"><a class="header-anchor" href="#i-metacaratteri" aria-hidden="true">#</a> I metacaratteri</h2><table><thead><tr><th></th><th>Descrizione</th></tr></thead><tbody><tr><td><code>.</code></td><td>indica qualsiasi carattere (escluso un accapo)</td></tr><tr><td><code>^</code></td><td>indica l\u2019inizio della stringa (o, se all\u2019interno di una classe di caratteri, la negazione della stessa)</td></tr><tr><td><code>$</code></td><td>indica la fine della stringa</td></tr><tr><td><code>|</code></td><td>indica l\u2019operatore OR</td></tr><tr><td><code>\\</code></td><td>il carattere di escape dei caratteri speciali</td></tr><tr><td><code>()</code></td><td>Contengono una sottostringa. Utili per il raggruppamento</td></tr><tr><td><code>[]</code></td><td>Contengono una \u2018classe\u2019 di caratteri</td></tr></tbody></table><h2 id="i-quantificatori" tabindex="-1"><a class="header-anchor" href="#i-quantificatori" aria-hidden="true">#</a> I quantificatori</h2><table><thead><tr><th></th><th>Descrizione</th></tr></thead><tbody><tr><td><code>*</code></td><td>indica zero o pi\xF9 occorrenze (di un carattere o di un gruppo di caratteri)</td></tr><tr><td><code>+</code></td><td>indica una o pi\xF9 occorrenze (di un carattere o di un gruppo di caratteri)</td></tr><tr><td><code>?</code></td><td>indica zero o una occorrenza (di un carattere o di un gruppo di caratteri)</td></tr><tr><td><code>{}</code></td><td>le parentesi graffe, che indicano il numero esatto, o minimo, o massimo, o l\u2019intervallo di occorrenze (di un carattere o di un gruppo di caratteri)</td></tr></tbody></table><h3 id="qualche-esempio-1" tabindex="-1"><a class="header-anchor" href="#qualche-esempio-1" aria-hidden="true">#</a> Qualche esempio</h3><table><thead><tr><th>RegExpr</th><th><code>/./g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>Ciao a tutti!! 12 volte grazie..</td></tr></tbody></table><table><thead><tr><th>RegExpr</th><th><code>/[^0-9]/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>C,i,a,o, ,a, ,t,u,t,t,i,!,!, , ,v,o,l,t,e, ,g,r,a,z,i,e,.,.,</td></tr></tbody></table><table><thead><tr><th>RegExpr</th><th><code>/t*/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>t,tt,t</td></tr></tbody></table><table><thead><tr><th>RegExpr</th><th><code>/t?/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>t,t,t,t</td></tr></tbody></table><table><thead><tr><th>RegExpr</th><th><code>/[0-9]{1}/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>1,2</td></tr></tbody></table><table><thead><tr><th>RegExpr</th><th><code>/[0-9]{2}/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>12</td></tr></tbody></table><table><thead><tr><th>RegExpr</th><th><code>/[a-z]{5,6}/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>tutti,volte,grazie</td></tr></tbody></table><table><thead><tr><th>RegExpr</th><th><code>/[a-z]+/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>iao,a,tutti,volte,grazie</td></tr></tbody></table><table><thead><tr><th>RegExpr</th><th><code>/[0-9]+/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>12</td></tr></tbody></table><table><thead><tr><th>RegExpr</th><th><code>/volte|grazie/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao a tutti!! 12 volte grazie..</td></tr><tr><td>Output</td><td>volte,grazie</td></tr></tbody></table><h2 id="le-classi-di-caratteri-e-i-posix" tabindex="-1"><a class="header-anchor" href="#le-classi-di-caratteri-e-i-posix" aria-hidden="true">#</a> Le classi di caratteri e i POSIX</h2><p>Le classi di caratteri e i POSIX servono per specificare una serie di caratteri allo stesso tempo, senza dover scomodare i gruppi.</p><table><thead><tr><th>Classe</th><th>Equivalente</th><th>Descrizione</th></tr></thead><tbody><tr><td><code>\\w</code> <br> <code>[[:word:]]</code></td><td><code>[a-zA-Z0-9_]</code></td><td>ricerca un carattere \u201Cparola\u201D (w sta per word), cio\xE8 lettere, numeri e \u201C_\u201D</td></tr><tr><td><code>\\d</code> <br> <code>[[:digit:]]</code></td><td><code>[0-9]</code></td><td>ricerca un numero (d sta per digit)</td></tr><tr><td><code>\\s</code> <br> <code>[[:space:]]</code></td><td><code>[ \\t\\r\\n\\v\\f]</code></td><td>ricerca uno spazio, comprese tabulazioni e caratteri di fine riga</td></tr><tr><td>---</td><td>---</td><td>---</td></tr><tr><td><code>\\W</code></td><td><code>[^a-zA-Z0-9_]</code></td><td>ricerca un carattere che non sia <code>\\w</code>, cio\xE8 tutto quello che non \xE8 lettere, numeri o \u201C_\u201D\u201D</td></tr><tr><td><code>\\D</code></td><td><code>[^0-9]</code></td><td>l\u2019opposto di <code>\\d</code>, ricerca qualsiasi cosa che non sia un numero</td></tr><tr><td><code>\\S</code></td><td><code>[^ \\t\\r\\n\\v\\f]</code></td><td>l\u2019inverso di <code>\\s</code>, ricerca qualsiasi cosa che non sia uno spazio, una tabulazione o dei caratteri di fine riga</td></tr><tr><td>---</td><td>---</td><td>---</td></tr><tr><td><code>[[:alnum:]]</code></td><td><code>[a-zA-Z0-9]</code></td><td>Ricerca caratteri alfanumerici, senza \u201C_\u201D</td></tr><tr><td><code>[[:alpha:]]</code></td><td><code>[a-zA-Z]</code></td><td>Ricerca caratteri alfabetici</td></tr><tr><td><code>[[:blank:]]</code></td><td><code>[ \\t]</code></td><td>ricerca solo spazi e tabulazioni</td></tr><tr><td><code>[[:lower:]]</code></td><td><code>[a-z]</code></td><td>ricerca lettere minuscole</td></tr><tr><td><code>[[:upper:]]</code></td><td><code>[A-Z]</code></td><td>ricerca lettere maiuscole</td></tr><tr><td><code>[[:graph:]]</code></td><td><code>[\\x21-x7E]</code></td><td>ricerca tutti i caratteri visibili a video della tabella ascii non estesa, dal numero 33 (!) al 126 (~).</td></tr><tr><td><code>[[:print:]]</code></td><td><code>[\\x20-x7E]</code></td><td>ricerca tutti i caratteri visibili a video della tabella ascii non estesa, dal numero 32 (spazio) al 126 (~).</td></tr><tr><td><code>[[:punct:]]</code></td><td></td><td>ricerca tutti i caratteri di punteggiatura come -!\u201D#$%&amp;&#39;()*+,./:;&lt;=&gt;?@[]^_`{</td></tr><tr><td><code>[[:cntrl:]]</code></td><td>[\\x00-x1F\\x7F]</td><td>ricerca solo i caratteri di controllo</td></tr></tbody></table><h2 id="esercizio-ricerca-di-una-email-semplice-1" tabindex="-1"><a class="header-anchor" href="#esercizio-ricerca-di-una-email-semplice-1" aria-hidden="true">#</a> Esercizio - ricerca di una email semplice 1</h2><table><thead><tr><th>RegExpr</th><th><code>/[\\w]+@[\\w]+\\.[\\w]+/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao, ricordati di scrivermi alla mia email personale per l&#39;acconto articolo DKR#123, qt.2, ID@12901, email: prova@gmail.com</td></tr><tr><td>Output</td><td>prova@gmail.com</td></tr></tbody></table><p>Nell&#39;espressione regolare sto cercando uno o pi\xF9 caratteri seguiti dal simbolo <code>@</code> seguiti da uno o pi\xF9 caratteri, seguiti da <code>.</code> seguito da uno o pi\xF9 caratteri. Ricordo che <code>\\w</code> ricerca tutte le lettere maiuscole/minuscole compreso il carattere <code>_</code> e le cifre.</p><p><strong>Nota:</strong> Per quanto possa sembrare semplice e completo, questo esempio non include le email del tipo <code>prova.prova@gmail.com</code></p><h2 id="esercizio-ricerca-di-una-email-semplice-2" tabindex="-1"><a class="header-anchor" href="#esercizio-ricerca-di-una-email-semplice-2" aria-hidden="true">#</a> Esercizio - ricerca di una email semplice 2</h2><p>L&#39;esempio precedente non raccoglie email del tipo <code>prova.prova@gmail.com</code>, infatti:</p><table><thead><tr><th>RegExpr</th><th><code>/[\\w]+@[\\w]+\\.[\\w]+/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao, ricordati di scrivermi alla mia email personale per l&#39;acconto articolo DKR#123, qt.2, ID@12901, email1: mario.rossi78@gmail.com</td></tr><tr><td>Output</td><td>rossi78@gmail.com</td></tr></tbody></table><p>Ecco allora una piccola modifica per aggiungere nella prima parte una selezione opzionale del carattere <code>.</code></p><table><thead><tr><th>RegExpr</th><th><code>/([\\w]\\.?)+@[\\w]+\\.[\\w]+/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao, ricordati di scrivermi alla mia email personale per l&#39;acconto articolo DKR#123, qt.2, ID@12901, email1: mario.rossi78@gmail.com</td></tr><tr><td>Output</td><td>mario.rossi78@gmail.com</td></tr></tbody></table><h2 id="esercizio-ricerca-di-una-url" tabindex="-1"><a class="header-anchor" href="#esercizio-ricerca-di-una-url" aria-hidden="true">#</a> Esercizio - ricerca di una url</h2><p>Questo esercizio ricerca una url semplice ma non completa</p><table><thead><tr><th>RegExpr</th><th><code>/(https?)\\:\\/{2}([\\w\\.]+\\/?)+([\\w\\#\\-\\.]+\\/?)+/g</code></th></tr></thead><tbody><tr><td>Input</td><td>Ciao, ricordati di visualizzare i seguenti link, link: https://regexr.com, link: http://regexr.com/5mpk9, link: https://it.wikipedia.org/wiki/Posta_elettronica, link: https://github.com/CodeCoagious19, link: https://webmail.intecs.it/mail#1, link: https://github.com/CodeCoagious19/corsi-programmazione/blob/master/README.md#programmazione-desktop</td></tr><tr><td>Output</td><td>https://regexr.com,http://regexr.com/5mpk9,https://it.wikipedia.org/wiki/Posta_elettronica,https://github.com/CodeCoagious19,https://webmail.intecs.it/mail#1,https://github.com/CodeCoagious19/corsi-programmazione/blob/master/README.md#programmazione-desktop</td></tr></tbody></table><p>L&#39;espressione regolare parte con il cercare <code>https</code> o <code>http</code>, prosegue alla ricerca di <code>//</code>. Nel primo gruppo ricerca testo che sia composto da una o pi\xF9 lettere comprensive del carattere <code>.</code> ed eventualmente il carattere <code>/</code>. Nel secondo gruppo invece, opzionale e pi\xF9 complesso ricerca del testo che contenga uno o pi\xF9 lettere compresensive eventualmente del carattere <code>-</code>, <code>.</code> o <code>#</code>, anche questo gruppo ha opzionale il caratere <code>/</code>. Ripeto inoltre la ricerca di questo gruppo.</p>',42);function v(f,_){const d=n("ExternalLinkIcon");return r(),o("div",null,[h,p,u,t("p",null,[m,t("a",g,[b,i(d)]),z]),x])}var E=a(s,[["render",v],["__file","index.html.vue"]]);export{E as default};
